==============================================================
============================TO DO=============================
==============================================================

Z OPISU WYKONAĆ :

System do zarządzania wypożyczalnią samochodów.
Użytkownik będzie mógł zalogować się loginem i hasłem do systemu. //grzegorz REJESTRACJA
Użytkownik będzie mógł wybrać samochód jaki chce wypożyczyć (marka, model itd.)
oraz dni, w których chce go wypożyczyć.
System sprawdzi czy wybrany samochód nie został zarezerwowany przez inną osobę w
wybranych dniach oraz wyliczy odpowiednią kwotę do zapłaty
(np. na podstawie wartości samochodu w momencie kupna, rocznika, przebiegu oraz dni wypożyczenia).
Od daty wypożyczenia samochód znika ze stanu placu do momentu oddania samochodu.
Użytkownik będzie mógł edytować lub usunąć rezerwację jeśli nie nastąpił odbiór.
(data odbioru > bieżąca data). Użytkownik będzie mógł przeglądać listę samochodów dostępnych do wypożyczenia,
oraz samochodów już wypożyczonych (przez innych użytkowników). Oddzielnie użytkownik będzie mógł przeglądać
listę samochodów wypożyczonych przez siebie (aktualnie oraz historycznie).



1.Rejestracja + Walidacja bazowa -> User dodany do bazy danych // GRZEGORZ
2.Logowanie -> po zalogowaniu uzytkownik widzi swoje rezerwacje // Igor
3.Status auta // ADAM R.
4.Wyliczenie ceny wypozyczenia  // MARTYNA
5.Możliwość edycji + usunięcia rezerwacji // Adam T.
6.Wyświetlanie dostepnych aut, Wyswietlanie wypozyczonych przez innych aut, Wyswietlania wypozyczonych przez siebie aut // Igor

BACK:

1. Utworzyć klasę UserRequest, aby dodawać obiekt bez konieczności podawania id (UserResponse jako UserDTO juz jest)
                  CarRequest                                                    (CarResponse jako CarDTO juz jest)
                  ReservationRequest                                            (ReservationResponse jako ReservationDTO juz jest)

2. Dodać klasę obsługującą raport zwrotny z wypożyczenia / coś w tym stylu / co ma mieć w ogóle

3. ...


DALEKA PRZYSZŁOŚĆ:

1. testy

2. ...


